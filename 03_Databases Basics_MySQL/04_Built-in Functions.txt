/*Part I – Queries for SoftUni Database*/
/*01_Find Names of All Employees by First Name*/
SELECT 
    `first_name`, `last_name`
FROM
    `employees`
WHERE
    `first_name` LIKE 'Sa%';
	
	
	
/*02_Find Names of All Employees by Last Name*/
SELECT 
    `first_name`, `last_name`
FROM
    `employees`
WHERE
    `last_name` LIKE '%ei%';
	
	
	
/*03_Find First Names of All Employess*/
SELECT 
    `first_name`
FROM
    `employees`
WHERE
    `department_id` IN (3 , 10)
	AND 1995 <= EXTRACT(YEAR FROM `hire_date`)
	AND 2005 >= EXTRACT(YEAR FROM `hire_date`);
		
		
		
/*04_Find All Employees Except Engineers*/
SELECT 
    `first_name`, `last_name`
FROM
    `employees`
WHERE
    `job_title` NOT LIKE '%engineer%';
	
	
	
/*05_Find Towns with Name Length*/
SELECT 
    `name`
FROM
    `towns`
WHERE
    CHAR_LENGTH(`name`) = 5
    OR CHAR_LENGTH(`name`) = 6
ORDER BY `name` ASC;



/*06_Find Towns Starting With*/
SELECT 
    `town_id`, `name`
FROM
    `towns`
WHERE
    `name` LIKE 'M%' 
	OR `name` LIKE 'K%'
	OR `name` LIKE 'B%'
	OR `name` LIKE 'E%'
ORDER BY `name` ASC;




/*07_Find Towns Not Starting With*/
SELECT 
    `town_id`, `name`
FROM
    `towns`
WHERE
    `name` NOT LIKE 'R%' 
	AND `name` NOT LIKE 'B%'
	AND `name` NOT LIKE 'D%'
ORDER BY `name` ASC;



/*08_Create View Employees Hired After*/
CREATE VIEW `v_employees_hired_after_2000` AS
SELECT 
    `first_name`, `last_name`
FROM
    `employees`
WHERE
    EXTRACT(YEAR FROM `hire_date`) > 2000;
		
		
		
/*09_Length of Last Name*/
SELECT 
    `first_name`, `last_name`
FROM
    `employees`
WHERE
    char_length(`last_name`) = 5;
	
	
/*Part II – Queries for Geography Database*/
/*10_Countries Holding 'A'*/
SELECT 
    `country_name`, `iso_code`
FROM
    `countries`
WHERE
    `country_name` LIKE '%A%A%A%'
ORDER BY `iso_code` ASC;



/*11_Mix of Peak and River Names*/
SELECT 
    `peak_name`,
    `river_name`,
    LOWER(CONCAT(`peak_name`, SUBSTRING(`river_name`, 2))) AS `mix`
FROM
    `peaks`,
    `rivers`
WHERE
    LEFT(`rivers`.`river_name`, 1) = RIGHT(`peaks`.`peak_name`, 1)
ORDER BY `mix`;



/*Part III – Queries for Diablo Database*/
/*12_Games From 2011 and 2012 Year*/
SELECT 
    `name`, DATE_FORMAT(`start`, '%Y-%m-%d') AS `start`
FROM
    `games`
WHERE
    EXTRACT(YEAR FROM `start`) IN (2011 , 2012)
ORDER BY `start` ASC
LIMIT 50;



/*13_User Email Providers*/
SELECT 
    `user_name`,
    SUBSTRING(`email`, LOCATE('@', `email`) + 1) AS `Email Provider`
FROM
    `users`
ORDER BY `Email Provider` ASC , `user_name` ASC;



/*14_Get Users with IP Address Like Pattern*/
SELECT 
    `user_name`, `ip_address`
FROM
    `users`
WHERE `ip_address` LIKE '___.1%.%.___'
ORDER BY `user_name` ASC;



/*15_Show All Games with Duration*/
SELECT `name` AS `game`, 
CASE 
	WHEN hour(`start`) BETWEEN 0 AND 11 THEN 'Morning'
	WHEN hour(`start`) BETWEEN 12 AND 17 THEN 'Afternoon'
    WHEN hour(`start`) BETWEEN 18 AND 23 THEN 'Evening' 
END AS `Part of the Day`,
CASE
	WHEN `duration` BETWEEN 0 AND 3 THEN 'Extra Short'
    WHEN `duration` BETWEEN 4 AND 6 THEN 'Short'
    WHEN `duration` BETWEEN 7 AND 10 THEN 'Long'
    ELSE 'Extra Long'
END AS `Duration`
FROM
	`games`;

	

/*Part IV – Date Functions Queries*/
/*16_Orders Table*/
SELECT 
    `product_name`,
    `order_date`,
    DATE_ADD(`order_date`, INTERVAL 3 DAY) AS `pay_due`,
    DATE_ADD(`order_date`, INTERVAL 1 MONTH) AS `deliver_due`
FROM
    `orders`;

	
	
/*17_People Table(Bonus)*/
USE `diablo`;

CREATE TABLE `people` 
SELECT 
	`id`, 
	concat(`first_name`, ' ', `last_name`) AS `name`,
    date_sub(`registration_date`, INTERVAL 14 YEAR) AS `birthdate`
FROM
    `users`;

SELECT 
	`name`,
    timestampdiff(YEAR,`birthdate`, now()) AS `age_in_years`, 
    timestampdiff(MONTH,`birthdate`, now()) AS `age_in_months`,
    timestampdiff(DAY,`birthdate`, now()) AS `age_in_days`,
    timestampdiff(MINUTE,`birthdate`, now()) AS `age_in_minutes`
FROM `people`
ORDER BY `birthdate` ASC;
